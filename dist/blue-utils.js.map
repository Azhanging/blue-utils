{"version":3,"sources":["webpack://blueUtils/webpack/universalModuleDefinition","webpack://blueUtils/webpack/bootstrap","webpack://blueUtils/./src/index.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA;AAAA;AACA;AACA;AACA,6CAA6C;AAC7C,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,mCAAmC;AACnC;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,IAAI,GAAG,0BAA0B;AAC5D,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,wEAAS,EAAC","file":"blue-utils.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"blueUtils\"] = factory();\n\telse\n\t\troot[\"blueUtils\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./static\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const blueUtils = {\r\n    //是否为空对象\r\n    isEmptyPlainObject(object) {\r\n        return JSON.stringify(object) === \"{}\";\r\n    },\r\n    //是否为string\r\n    isStr(val) {\r\n        return typeof val === 'string';\r\n    },\r\n    //是否为obj对象\r\n    isPlainObject(object) {\r\n        return object && !this.isArray(object) && (object.toString() === '[object Object]') && (object.constructor === Object);\r\n    },\r\n    //是否为数组\r\n    isArray(val) {\r\n        return val instanceof Array;\r\n    },\r\n    //是否为对象Object Object\r\n    isObject(object) {\r\n        return this.isPlainObject(object) || this.isArray(object);\r\n    },\r\n    //是否有值\r\n    isDef(val) {\r\n        return val !== undefined && val !== null;\r\n    },\r\n    //是否为undefine 或者 null\r\n    isUndef(val) {\r\n        return val === undefined || val === null;\r\n    },\r\n    //字符串是否为空\r\n    isEmptyStr(val) {\r\n        return val.trim().length === 0;\r\n    },\r\n    //是否为true\r\n    isTrue(bool) {\r\n        return bool === true;\r\n    },\r\n    //是否为false\r\n    isFalse(bool) {\r\n        return bool === false;\r\n    },\r\n    //是否为function\r\n    isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    },\r\n    //是否为error\r\n    isError(error) {\r\n        return error instanceof Error;\r\n    },\r\n    //是否为布尔值\r\n    isBoolean(bool) {\r\n        return typeof bool === 'boolean';\r\n    },\r\n    //执行function\r\n    hook(context, cb, args = []) {\r\n        if (this.isFunction(cb)) {\r\n            return cb.apply(context, args);\r\n        }\r\n        return cb;\r\n    },\r\n    //遍历\r\n    each(obj, cb, isReturn = false) {\r\n        if (this.isUndef(obj))\r\n            return;\r\n        let i = 0, index = 0, newVal = [];\r\n        const len = obj.length;\r\n        if (this.isArray(obj)) {\r\n            for (; i < len; i++) {\r\n                if (isReturn) {\r\n                    newVal.push(cb(obj[i], i));\r\n                }\r\n                else {\r\n                    cb(obj[i], i);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (i in obj) {\r\n                if (!obj.hasOwnProperty(i))\r\n                    continue;\r\n                if (isReturn) {\r\n                    newVal.push(cb(obj[i], i, index++));\r\n                }\r\n                else {\r\n                    cb(obj[i], i, index++);\r\n                }\r\n            }\r\n        }\r\n        if (isReturn)\r\n            return newVal;\r\n    },\r\n    //深拷贝\r\n    deepCopy(obj) {\r\n        if (!obj || !(this.isArray(obj)) && !(obj.toString() === \"[object Object]\"))\r\n            return obj;\r\n        //非纯对象类型，直接返回出去\r\n        if (!(this.isArray(obj)) && (obj.constructor !== Object))\r\n            return obj;\r\n        const _obj = this.isArray(obj) ? [] : {};\r\n        for (let key in obj) {\r\n            if (!obj.hasOwnProperty(key))\r\n                continue;\r\n            if ((this.isArray(obj)) || (this.isPlainObject(obj))) {\r\n                _obj[key] = this.deepCopy(obj[key]);\r\n            }\r\n            else {\r\n                _obj[key] = obj[key];\r\n            }\r\n        }\r\n        return _obj;\r\n    },\r\n    //扩展\r\n    extend(...args) {\r\n        //是否深拷贝\r\n        let isDeep = true;\r\n        //存放arguments的参数\r\n        let objects = [...args];\r\n        //合并后的obj\r\n        let extendObject = {};\r\n        const lastArg = objects[objects.length - 1];\r\n        //检查最后一个参数是否为深拷贝\r\n        if (this.isBoolean(lastArg)) {\r\n            isDeep = lastArg;\r\n            [].pop.call(objects);\r\n        }\r\n        //默认深拷贝，否则最后一个参数为深拷贝布尔值\r\n        if (isDeep) {\r\n            objects = this.deepCopy(objects);\r\n        }\r\n        this.each(objects, (object, index) => {\r\n            if (index === (objects.length - 1))\r\n                return;\r\n            const nextObject = objects[index + 1];\r\n            this.each(nextObject, (obj, key) => {\r\n                if (this.isPlainObject(obj)) {\r\n                    if (!object[key]) {\r\n                        object[key] = {};\r\n                    }\r\n                    object[key] = this.extend(object[key], obj, isDeep);\r\n                }\r\n                else {\r\n                    object[key] = obj;\r\n                }\r\n            });\r\n            objects[index + 1] = extendObject = object;\r\n            objects[index] = null;\r\n        });\r\n        return extendObject;\r\n    },\r\n    //获取表达式\r\n    getRegExp(expr) {\r\n        const tm = '\\\\/*.?+$^[](){}|\\'\\\"';\r\n        this.each(tm, (tmItem, index) => {\r\n            expr = expr.replace(new RegExp('\\\\' + tmItem, 'g'), '\\\\' + tmItem);\r\n        });\r\n        return expr;\r\n    },\r\n    //获取obj的长度\r\n    getObjLen(obj) {\r\n        let index = 0;\r\n        this.each(obj, () => {\r\n            ++index;\r\n        });\r\n        return index;\r\n    },\r\n    getObjKeys(object) {\r\n        return this.each(object, (obj, key) => {\r\n            return key;\r\n        }, true);\r\n    },\r\n    //get link query string\r\n    getLinkParams(link) {\r\n        const linkType = link.split('?');\r\n        const queryString = linkType[1];\r\n        if (linkType.length > 0 && queryString && queryString !== '') {\r\n            return queryString;\r\n        }\r\n        return '';\r\n    },\r\n    getNoParamsLink(link = '') {\r\n        const linkType = link.split('?');\r\n        return linkType[0];\r\n    },\r\n    //query string 转化为 object\r\n    parseParams(queryString) {\r\n        const linkQuery = {};\r\n        if (!queryString)\r\n            return linkQuery;\r\n        //是否存在原query\r\n        (queryString.split('&') || []).forEach((queryItemString) => {\r\n            const splitQueryItem = queryItemString.split('=');\r\n            linkQuery[splitQueryItem[0]] = splitQueryItem[1];\r\n        });\r\n        return linkQuery;\r\n    },\r\n    //query 转化为 string\r\n    stringifyParams(query) {\r\n        if (!this.isPlainObject(query))\r\n            return '';\r\n        let _query = [];\r\n        this.each(query, (value, key) => {\r\n            if (this.isPlainObject(value) || this.isArray(value)) {\r\n                value = JSON.stringify(value);\r\n            }\r\n            _query.push(`${key}=${encodeURIComponent(value)}`);\r\n        });\r\n        return _query.join('&');\r\n    },\r\n    //返回promise\r\n    promise(hook) {\r\n        return new Promise((resolve, reject) => {\r\n            this.hook(this, hook, [resolve, reject]);\r\n        });\r\n    },\r\n    //防抖\r\n    debounce(hook, delay = 200) {\r\n        let timer = 0;\r\n        return (ctx, args = []) => {\r\n            if (timer)\r\n                clearTimeout(timer);\r\n            timer = setTimeout(() => {\r\n                this.hook(ctx, hook, args);\r\n                timer = null;\r\n            }, delay);\r\n        };\r\n    },\r\n    //节流\r\n    throttle(hook, delay = 200) {\r\n        let last;\r\n        return (ctx, args = []) => {\r\n            const now = +new Date();\r\n            if (!last || (last && (now > (last + delay)))) {\r\n                last = now;\r\n                this.hook(ctx, hook, args);\r\n            }\r\n        };\r\n    }\r\n};\r\nexport default blueUtils;\r\n"],"sourceRoot":""}